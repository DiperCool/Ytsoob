// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ytsoob.Services.Posts.Shared.Data;

#nullable disable

namespace Ytsoob.Services.Posts.Shared.Data.Migrations
{
    [DbContext(typeof(PostsDbContext))]
    [Migration("20230331195642_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ytsoob.Services.Posts.Contents.Models.Content", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint")
                        .HasColumnName("post_id");

                    b.HasKey("Id")
                        .HasName("pk_contents");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_contents_id");

                    b.HasIndex("PostId")
                        .IsUnique()
                        .HasDatabaseName("ix_contents_post_id");

                    b.ToTable("contents", "posts");
                });

            modelBuilder.Entity("Ytsoob.Services.Posts.Posts.Models.Post", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_posts");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_posts_id");

                    b.ToTable("posts", "posts");
                });

            modelBuilder.Entity("Ytsoob.Services.Posts.Users.Features.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Ytsoob.Services.Posts.Contents.Models.Content", b =>
                {
                    b.HasOne("Ytsoob.Services.Posts.Posts.Models.Post", null)
                        .WithOne("Content")
                        .HasForeignKey("Ytsoob.Services.Posts.Contents.Models.Content", "PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contents_posts_post_id");

                    b.OwnsOne("Ytsoob.Services.Posts.Contents.ValueObjects.ContentText", "ContentText", b1 =>
                        {
                            b1.Property<long>("ContentId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("content_text");

                            b1.HasKey("ContentId");

                            b1.ToTable("contents", "posts");

                            b1.WithOwner()
                                .HasForeignKey("ContentId")
                                .HasConstraintName("fk_contents_contents_id");
                        });

                    b.Navigation("ContentText")
                        .IsRequired();
                });

            modelBuilder.Entity("Ytsoob.Services.Posts.Posts.Models.Post", b =>
                {
                    b.Navigation("Content")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
