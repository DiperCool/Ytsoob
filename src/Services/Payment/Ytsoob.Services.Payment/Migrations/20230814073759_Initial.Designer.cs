// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ytsoob.Services.Payment.Shared.Data;

#nullable disable

namespace Ytsoob.Services.Payment.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    [Migration("20230814073759_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ytsoob.Services.Payment.Subscriptions.Models.PriceProduct", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("PricePaymentId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("price_payment_id");

                    b.Property<int>("RecurringDays")
                        .HasColumnType("integer")
                        .HasColumnName("recurring_days");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("subscription_id");

                    b.HasKey("Id")
                        .HasName("pk_price_products");

                    b.HasIndex("SubscriptionId")
                        .HasDatabaseName("ix_price_products_subscription_id");

                    b.ToTable("price_products", (string)null);
                });

            modelBuilder.Entity("Ytsoob.Services.Payment.Subscriptions.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("photo");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<long>("YtsooberId")
                        .HasColumnType("bigint")
                        .HasColumnName("ytsoober_id");

                    b.HasKey("Id")
                        .HasName("pk_subscriptions");

                    b.HasIndex("YtsooberId")
                        .HasDatabaseName("ix_subscriptions_ytsoober_id");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("Ytsoob.Services.Payment.Ytsoobers.Features.Models.Ytsoober", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uuid")
                        .HasColumnName("identity_id");

                    b.Property<string>("StripeId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stripe_id");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_ytsoobers");

                    b.ToTable("ytsoobers", (string)null);
                });

            modelBuilder.Entity("Ytsoob.Services.Payment.Subscriptions.Models.PriceProduct", b =>
                {
                    b.HasOne("Ytsoob.Services.Payment.Subscriptions.Models.Subscription", "Subscription")
                        .WithMany("Prices")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_price_products_subscriptions_subscription_id");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Ytsoob.Services.Payment.Subscriptions.Models.Subscription", b =>
                {
                    b.HasOne("Ytsoob.Services.Payment.Ytsoobers.Features.Models.Ytsoober", "Ytsoober")
                        .WithMany()
                        .HasForeignKey("YtsooberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_subscriptions_ytsoobers_ytsoober_id");

                    b.Navigation("Ytsoober");
                });

            modelBuilder.Entity("Ytsoob.Services.Payment.Subscriptions.Models.Subscription", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
