version: "3.8"

services:
  #######################################################
  #  rabbitmq
  #######################################################
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672
      # volumes:
      #   - rabbitmq:/var/lib/rabbitmq
    networks:
      - Ytsoob

    #######################################################
    #  mongo
    #######################################################
  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    # https://docs.docker.com/compose/environment-variables/env-file/#parameter-expansion
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS:-admin}
    ports:
      - ${MONGO_PORT:-27017}:${MONGO_PORT:-27017}
    networks:
      - Ytsoob

    #######################################################
    #  postgres
    #######################################################
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    #https://docs.docker.com/compose/environment-variables/env-file/#parameter-expansion
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    networks:
      - Ytsoob

  #######################################################
  #  eventstore-db
  #######################################################
  # https://developers.eventstore.com/server/v21.10/installation.html#insecure-single-node
  # https://hub.docker.com/r/eventstore/eventstore/tags
  # https://stackoverflow.com/questions/65272764/ports-are-not-available-listen-tcp-0-0-0-0-50070-bind-an-attempt-was-made-to

  eventstore:
    image: eventstore/eventstore:latest
    container_name: eventstore
    restart: on-failure
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=false
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
      - EVENTSTORE_MEM_DB=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
    networks:
      - Ytsoob

  #   #######################################################
  #   #  Redis
  #   #######################################################

  # redis:
  #   image: redis
  #   container_name: redis
  #   restart: unless-stopped
  #   networks:
  #     - Ytsoob
  #   ports:
  #     - 6379:6379

  #######################################################
  #  Portainer
  #######################################################
  # https://bobcares.com/blog/install-portainer-docker-compose/
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - Ytsoob

    #######################################################
    #  elasticsearch
    #######################################################
  elasticsearch:
    container_name: elastic_search
    restart: on-failure
    image: elasticsearch:8.5.2
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - Ytsoob

    #######################################################
    #  kibana
    #######################################################
  kibana:
    image: kibana:8.5.2
    container_name: kibana
    restart: on-failure
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic_search:9200
    ports:
      - "5601:5601"
    networks:
      - Ytsoob
    depends_on:
      - elasticsearch

  jaeger:
    container_name: jaeger
    restart: on-failure
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - Ytsoob

    #######################################################
    #  zipkin
    #######################################################
  zipkin:
    image: openzipkin/zipkin:latest
    restart: on-failure
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - Ytsoob

    #######################################################
    #  otel-collector
    #######################################################
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    command: ["--config=/etc/otel-collector-config.yaml", ""]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      - zipkin
    networks:
      - Ytsoob

    #######################################################
    # prometheus
    #######################################################
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: on-failure
    user: root
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - Ytsoob

    #######################################################
    # node_exporter
    #######################################################
  node_exporter:
    container_name: node_exporter
    restart: on-failure
    image: prom/node-exporter
    ports:
      - "9101:9100"
    networks:
      - Ytsoob

    #######################################################
    # grafana
    #######################################################
  grafana:
    container_name: grafana
    restart: on-failure
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - Ytsoob

  #######################################################
  # seq
  #######################################################
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: on-failure
    ports:
      - 8081:80
      - 5341:5341
    environment:
      ACCEPT_EULA: Y
    networks:
      - Ytsoob
  blobstorage:
    image: minio/minio
    container_name: blobstorage
    ports:
      - 9001:9001
      - 9000:9000
    environment:
      - MINIO_ROOT_USER=access
      - MINIO_ROOT_PASSWORD=secret1234
    command: server /data --console-address ":9001"
    networks:
      - Ytsoob
networks:
  Ytsoob:
    name: Ytsoob
    driver: bridge

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
  elastic-data:
